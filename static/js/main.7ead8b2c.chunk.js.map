{"version":3,"sources":["components/ListComponents.js","components/SearchForm.js","App.js","reportWebVitals.js","index.js"],"names":["ListComponents","item","question","select","answer","visible","className","classNames","map","sel","selIndex","SearchForm","questList","useState","inputValue","input","setInput","id","name","onChange","e","target","value","placeholder","autoFocus","temp","concat","indexOf","App","questListJson","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ikyEAmCeA,MA/Bf,YAAmC,IAATC,EAAQ,EAARA,KAChBC,EAAsCD,EAAtCC,SAAUC,EAA4BF,EAA5BE,OAAQC,EAAoBH,EAApBG,OAAQC,EAAYJ,EAAZI,QAClC,OACE,mCACE,qBACEC,UAAWC,IACT,gBACY,IAAZF,EAAmB,UAAY,aAHnC,SAME,qBAAIC,UAAWC,IAAW,aAA1B,UACE,oBAAID,UAAU,WAAd,SAA0BJ,IACzBC,EAAOK,KAAI,SAACC,EAAKC,GAChB,OACE,oBAEEJ,UAAWC,IACT,aACAH,IAAWM,EAAW,EAAI,SAAW,IAJzC,SAOGD,GANIC,cCyBNC,MAzCf,YAAoC,IAAdC,EAAa,EAAbA,UAAa,EACPC,mBAAS,CAAEC,WAAY,KADhB,mBAC1BC,EAD0B,KACnBC,EADmB,KAEzBF,EAAeC,EAAfD,WASR,OACE,qCACE,qBAAKG,GAAG,iBAAR,SACE,uBACEC,KAAK,aACLC,SAbS,SAACC,GAAO,IAAD,EACEA,EAAEC,OAAlBH,EADc,EACdA,KAAMI,EADQ,EACRA,MACdN,EAAS,2BACJD,GADG,kBAELG,EAAOI,MAUJA,MAAOR,EACPS,YAAY,gDACZC,WAAS,MAGb,qBAAKP,GAAG,qBAAR,SACGL,EAAUJ,KAAI,SAACP,GAAU,IAChBC,EAAqBD,EAArBC,SACFuB,EADuBxB,EAAXE,OACEuB,OAAOxB,GAE3B,OADAD,EAAKI,SAAU,EAEboB,EAAKjB,KACH,SAACC,GAAD,OACGR,EAAKI,SACyB,IAA7BI,EAAIkB,QAAQb,IAA4Bb,EAAKI,WAElD,cAAC,EAAD,CAAgBJ,KAAMA,aCxBpB2B,MARf,WACE,OACE,qBAAKX,GAAG,gBAAR,SACE,cAAC,EAAD,CAAYL,UAAWiB,OCKdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7ead8b2c.chunk.js","sourcesContent":["import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport \"../css/questList.scss\";\r\n\r\nfunction ListComponents({ item }) {\r\n  const { question, select, answer, visible } = item;\r\n  return (\r\n    <>\r\n      <div\r\n        className={classNames(\r\n          \"questListDiv\",\r\n          visible === true ? \"visible\" : \"unvisible\"\r\n        )}\r\n      >\r\n        <ul className={classNames(\"questList\")}>\r\n          <li className=\"question\">{question}</li>\r\n          {select.map((sel, selIndex) => {\r\n            return (\r\n              <li\r\n                key={selIndex}\r\n                className={classNames(\r\n                  \"answerList\",\r\n                  answer === selIndex + 1 ? \"answer\" : \"\"\r\n                )}\r\n              >\r\n                {sel}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListComponents;\r\n","import React, { useState } from \"react\";\r\nimport \"../css/searchForm.scss\";\r\nimport ListComponents from \"./ListComponents\";\r\nfunction SearchForm({ questList }) {\r\n  const [input, setInput] = useState({ inputValue: \"\" });\r\n  const { inputValue } = input;\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInput({\r\n      ...input,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"inputContainer\">\r\n        <input\r\n          name=\"inputValue\"\r\n          onChange={onChange}\r\n          value={inputValue}\r\n          placeholder=\"문제 및 보기 입력\"\r\n          autoFocus\r\n        />\r\n      </div>\r\n      <div id=\"questListContainer\">\r\n        {questList.map((item) => {\r\n          const { question, select } = item;\r\n          const temp = select.concat(question);\r\n          item.visible = false;\r\n          return (\r\n            temp.map(\r\n              (sel) =>\r\n                (item.visible =\r\n                  sel.indexOf(inputValue) !== -1 ? true : item.visible)\r\n            ),\r\n            (<ListComponents item={item} />)\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import \"./css/reset.css\";\r\nimport \"./css/main.scss\";\r\nimport questListJson from \"./json/Qlist\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nfunction App() {\r\n  return (\r\n    <div id=\"bodyContainer\">\r\n      <SearchForm questList={questListJson} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}